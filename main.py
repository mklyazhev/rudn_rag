import asyncio

from aiogram import Bot, Dispatcher
from aiogram.client.bot import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import flags
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.utils.chat_action import ChatActionMiddleware
from loguru import logger

from src.rag_utils import get_chunks, get_embeddings, get_retriever, get_llm
from src.rag import RAG
from src.prompts import RAG_PROMPT
from src import log_handler
from src.config import config


storage = MemoryStorage()
dp = Dispatcher(storage=storage)
dp.message.middleware(ChatActionMiddleware())  # –ù—É–∂–Ω–æ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞ —É –±–æ—Ç–∞,
                                               # –∫–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞

chunks = get_chunks("artifacts/data/lib_data", "*.md")
embeddings = get_embeddings("cointegrated/rubert-tiny2")
retriever = get_retriever(chunks, embeddings)

# IlyaGusev/saiga_llama3_8b, Vikhrmodels/Vikhr-Llama3.1-8B-Instruct-R-21-09-24, gpt-3.5-turbo-0125, GigaChat
llm = get_llm(config.llm, use_api=True, api_key=config.gigachat_api_key.get_secret_value())
rag = RAG(llm, retriever, RAG_PROMPT, use_api=True)


@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    text = f"""
üëã –ü—Ä–∏–≤–µ—Ç, *{message.from_user.full_name}*! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –†–£–î–ù!

–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å.

–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–æ –º–Ω–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫—É—é –∂–∏–∑–Ω—å –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–π. üéì‚ú®
"""

    await message.answer(text, parse_mode="MARKDOWN", disable_web_page_preview=True)


@dp.message()
@flags.chat_action(initial_sleep=0, action="typing", interval=0)
async def cmd_new_chat_handler(message: Message) -> None:
    answer = rag.generate(message.text)
    await message.answer(answer, parse_mode="MARKDOWN", disable_web_page_preview=True)


async def main():
    # –í–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    await log_handler.setup()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Bot —Å —Ä–µ–∂–∏–º–æ–º –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º)
    bot = Bot(token=config.telegram_bot_token.get_secret_value(), default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    bot_user = await bot.me()
    logger.info(f"Initialize Bot: {bot_user.full_name} [@{bot_user.username}]")

    # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—à–ª–∏, –∫–æ–≥–¥–∞ –±–æ—Ç –±—ã–ª –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω.
    # –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –æ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª —Ç–æ–ª—å–∫–æ —Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è,
    # –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—à–ª–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤–æ –≤—Ä–µ–º—è –µ–≥–æ —Ä–∞–±–æ—Ç—ã, –∞ –Ω–µ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è.
    logger.info("Drop pendings updates")
    await bot.delete_webhook(drop_pending_updates=True)

    await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())


if __name__ == "__main__":
    asyncio.run(main())
